--- src/org/python/core/imp.java.orig	2014-05-28 11:30:03.078335583 +0100
+++ src/org/python/core/imp.java	2014-05-28 11:38:02.901384465 +0100
@@ -249,7 +249,13 @@
     }
 
     public static String makeCompiledFilename(String filename) {
-        return filename.substring(0, filename.length() - 3) + "$py.class";
+        String basename = filename.substring(0, filename.length() - 3) + "$py.class";
+        File cache = Py.getSystemState().classCache();
+        if (cache == null) {
+            return basename;
+        } else {
+            return new File(cache, basename).getPath();
+        }
     }
 
     /**
@@ -279,6 +286,7 @@
             if (man != null) {
                 man.checkWrite(compiledFilename);
             }
+            new File(compiledFilename).getParentFile().mkdirs();
             fop = new FileOutputStream(compiledFilename);
             fop.write(compiledSource);
             fop.close();
@@ -521,7 +529,7 @@
     static PyObject loadFromSource(PySystemState sys, String name, String modName, String entry) {
         String dirName = sys.getPath(entry);
         String sourceName = "__init__.py";
-        String compiledName = "__init__$py.class";
+        String compiledName = makeCompiledFilename(sourceName);
         // display names are for identification purposes (e.g. __file__): when entry is
         // null it forces java.io.File to be a relative path (e.g. foo/bar.py instead of
         // /tmp/foo/bar.py)
@@ -546,7 +554,7 @@
         if (!pkg) {
             Py.writeDebug(IMPORT_LOG, "trying source " + dir.getPath());
             sourceName = name + ".py";
-            compiledName = name + "$py.class";
+            compiledName = makeCompiledFilename(sourceName);
             displaySourceName = new File(displayDirName, sourceName).getPath();
             displayCompiledName = new File(displayDirName, compiledName).getPath();
             sourceFile = new File(dirName, sourceName);
--- src/org/python/core/packagecache/CachedJarsPackageManager.java.orig	2014-05-28 11:26:15.652101123 +0100
+++ src/org/python/core/packagecache/CachedJarsPackageManager.java	2014-05-28 11:26:54.893451556 +0100
@@ -672,6 +672,12 @@
             return false;
         }
 
+        aCachedir1.setReadable(false, false);
+        aCachedir1.setWritable(false, false);
+        aCachedir1.setExecutable(false, false);
+        aCachedir1.setReadable(true, true);
+        aCachedir1.setWritable(true, true);
+        aCachedir1.setExecutable(true, true);
         this.cachedir = aCachedir1;
 
         return true;
--- src/org/python/core/PySystemState.java.orig	2014-07-31 10:39:48.478125592 +0100
+++ src/org/python/core/PySystemState.java	2014-07-31 10:47:10.647338683 +0100
@@ -1098,6 +1098,12 @@
         long_info = LongInfo.getInfo();
     }
 
+    public static File classCache() {
+        if (cachedir == null)
+            return null;
+        return new File(cachedir, "classes");
+    }
+
     public static boolean isPackageCacheEnabled() {
         return cachedir != null;
     }
